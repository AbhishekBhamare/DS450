#include<bits/stdc++.h>
using namespace std;

int solve(){
   
   int n, m, l;
   cin >> n >> m >> l;
   string s1, s2, s3;
   cin >> s1 >> s2 >> s3;
  
   vector<vector<vector<int>>>dp(n+1, vector<vector<int>>(m+1, vector<int>(l+1)));

   for(int i=0; i<=n; i++){
	   for(int j=0; j<=m; j++){
		   for(int k=0; k<=l; k++){
			  
			   if(i == 0 || j == 0 || k == 0){
				   dp[i][j][k] = 0;
			   }
			   else if(s1[i-1] == s2[j-1] && s1[i-1] == s3[k-1]){
				   dp[i][j][k] = dp[i-1][j-1][k-1] + 1;
			   }
			   else{
				   dp[i][j][k] = max(dp[i-1][j][k], max(dp[i][j-1][k], dp[i][j][k-1]));
			   }
			   
		   }
	   }
   }
   return dp[n][m][l];
} 
int main(){ 

    int tt;
    cin >> tt;
    while(tt--){
	cout << solve() << "\n";}
	return 0;
}
