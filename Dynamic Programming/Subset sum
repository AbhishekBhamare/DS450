// same as 0/1 knapsack

#include<bits/stdc++.h>
using namespace std;

int solve(){
	
	int n, w;
	cin >> n >> w;
	int arr[n];
	for(int i=0; i<n; i++){
		cin >> arr[i];
	}
	vector<vector<int>>dp(n+1, vector<int>(w+1));
	for(int i=0; i<n+1; i++){
		for(int j=0; j<w+1; j++){
			
			
			if(i == 0 && j == 0){
				dp[i][j] = 1;
			}
			else if(i == 0){   
				dp[i][j] = 0;
			}
			else if(j == 0){
				dp[i][j] = 1;
			}
			else if(arr[i-1] <= j){
				dp[i][j] = dp[i-1][j-arr[i-1]] || dp[i-1][j];     
			}
			else{
				dp[i][j] = dp[i-1][j];
			}
			
		}
	}
	return dp[n][w];
} 
int main(){ 

  cout << solve();  //  o/p-: 1 if true and 0 if false
	return 0;
}
