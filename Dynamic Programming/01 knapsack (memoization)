#include<bits/stdc++.h>

using namespace std;

int static dp[1002][1004];


int solve(int n, int w, int wt[], int v[]){
      
	  if(n == 0 || w == 0){
		  return 0;
	  }
	  else if(dp[n][w] != -1){
		  return dp[n][w];
	  }
	  
	 else if(wt[n-1] <= w){
		  
		dp[n][w] =  max(v[n-1] + solve(n-1, w-wt[n-1], wt, v), solve(n-1, w, wt, v));
	  }
	  
	  else{ 
		  dp[n][w] = solve(n-1, w, wt, v);
	  }
  return 0;   
}
int main(){ 
 
   memset(dp, -1, sizeof(dp));
	 int n,w;
	 cin >> n >> w;
	 int wt[n];
	 int v[n];
	 
	 
	 for(int i=0; i<n; i++){
		 cin >> v[i];
	 }
	 for(int i=0; i<n; i++){
		 cin >> wt[i];
	 }
	cout << solve(n,w,wt,v) << "\n";
     return 0;	  
}

 
